"
Copyright (C) 2014 Mattias Ugelvik

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
".

classified
exposing Truthy?
         And?
         Or?
         Xor?
         Not?
where

Truthy? := [
  "
  @ = Val

  Returns `yeah` if `Val` is 'truthy', `nope` otherwise.

  These are the 'falsy' values: `{}`, `0`, `nope`, `\"\"` and `nil`.
  All other values are considered 'truthy'.
  ".
  if @ then yeah. else nope. end.
].


And? := Funcs:Curry 2 [
  "
  @ = Val1 Val2

  Returns `yeah` if and only if both `Val1` and `Val2` are truthy, `nope` otherwise.
  ".
  {A1, A2} := @.
  case {Truthy? A1, Truthy? A2} of
    {yeah, yeah} -> yeah.
    {_, _}       -> nope.
  end.
].

Or? := Funcs:Curry 2 [
  "
  @ = Val1 Val2

  Returns `yeah` if either `Val1` or `Val2` is truthy, `nope` otherwise.
  ".
  {A1, A2} := @.
  case {Truthy? A1, Truthy? A2} of
    {nope, nope} -> nope.
    {_, _}       -> yeah.
  end.
].

Xor? := Funcs:Curry 2 [
  "
  @ = Val1 Val2

  Returns `yeah` if exactly one of `Val1` and `Val2` is truthy, `nope` otherwise.
  ".
  {A1, A2} := @.
  case {Truthy? A1, Truthy? A2} of
    {Same, Same} -> nope.
    {_, _}       -> yeah.
  end.
].

Not? := [
  "
  @ = Val

  Returns `nope` if `Val` is truthy, `yeah` otherwise.
  ".
  if @ then nope. else yeah. end.
].

endify.